<Activity mc:Ignorable="sap sap2010" x:Class="calculate_working_date" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_standardDays2DList" Type="InArgument(scg:List(scg:List(x:Int32)))" />
    <x:Property Name="workingDays" Type="OutArgument(scg:List(scg:List(x:Int32)))" />
    <x:Property Name="monthHolidays" Type="InArgument(scg:List(x:Int32))" />
    <x:Property Name="iterationCount" Type="InArgument(x:Int32)" />
    <x:Property Name="preOrNowLiteral" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1224,3327</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>calculate_working_date_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="27">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="calculate_working_date" sap:VirtualizedContainerService.HintSize="680,3262" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="isHoliday" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="618,70" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[isHoliday]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="618,70" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(scg:List(x:Int32))">[workingDays]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(scg:List(x:Int32))">[new List(Of List(Of integer))]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="계산일 출력" sap:VirtualizedContainerService.HintSize="618,90" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:Int32)" Default="[new List(Of int32)]" Name="targetDates" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEach x:TypeArguments="scg:List(x:Int32)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="472,534" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[in_standardDays2DList]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="scg:List(x:Int32)">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="scg:List(x:Int32)" Name="item" />
            </ActivityAction.Argument>
            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="436,400" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[item]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="item1" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,266" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,144" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:Int32)">[targetDates]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:Int32">[item1]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="472,101" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[preOrNowLiteral + Space(1) + iterationCount.ToString + &quot;차 계산 영업일: &quot; + String.Join(&quot;,&quot;, targetDates.Distinct)]" />
    </Sequence>
    <ui:ForEach x:TypeArguments="scg:List(x:Int32)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="618,2431" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_standardDays2DList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="scg:List(x:Int32)">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="scg:List(x:Int32)" Name="i" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="582,2297" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="idx" />
              <Variable x:TypeArguments="scg:List(x:Int32)" Name="d" />
              <Variable x:TypeArguments="x:String" Name="j" />
              <Variable x:TypeArguments="scg1:Stack(x:Int32)" Name="taskStack" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="520,70" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:Int32)">[d]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:Int32)">[new List(Of integer)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="[idx]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="520,707" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[i]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
                  </ActivityAction.Argument>
                  <If Condition="[monthHolidays.Contains(item)]" sap:VirtualizedContainerService.HintSize="484,573" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,376" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,144" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="scg:List(x:Int32)">[d]</InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="x:Int32">[idx]</InArgument>
                        </InvokeMethod>
                        <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[isHoliday]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:ForEach x:TypeArguments="x:Int32" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="520,400" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[d]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Int32">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,266" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,144" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:Int32)">[i]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:Int32">[i.Last + 1]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Assign sap:VirtualizedContainerService.HintSize="520,70" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="scg1:Stack(x:Int32)">[taskStack]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg1:Stack(x:Int32)">[new Stack(Of integer) (d)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="520,584" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[Enumerable.Range(0, taskStack.Count)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,450" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="test" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,144" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Pop">
                      <InvokeMethod.Result>
                        <OutArgument x:TypeArguments="x:Int32">[test]</OutArgument>
                      </InvokeMethod.Result>
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg1:Stack(x:Int32)">[taskStack]</InArgument>
                      </InvokeMethod.TargetObject>
                    </InvokeMethod>
                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="338,144" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="RemoveAt">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:Int32)">[i]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:Int32">[test]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="520,144" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg:List(scg:List(x:Int32))">[workingDays]</InArgument>
              </InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="scg:List(x:Int32)">[i]</InArgument>
            </InvokeMethod>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[isHoliday]" sap:VirtualizedContainerService.HintSize="618,319" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke calculate-working-date workflow" sap:VirtualizedContainerService.HintSize="340,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="실행일자계산\calculate-working-date.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="scg:List(scg:List(x:Int32))" x:Key="in_standardDays2DList">
              <mva:VisualBasicValue x:TypeArguments="scg:List(scg:List(x:Int32))" ExpressionText="workingDays" />
            </InArgument>
            <OutArgument x:TypeArguments="scg:List(scg:List(x:Int32))" x:Key="workingDays">
              <mva:VisualBasicReference x:TypeArguments="scg:List(scg:List(x:Int32))" ExpressionText="workingDays" />
            </OutArgument>
            <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="monthHolidays">
              <mva:VisualBasicValue x:TypeArguments="scg:List(x:Int32)" ExpressionText="monthHolidays" />
            </InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="iterationCount">
              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="iterationCount + 1" />
            </InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="preOrNowLiteral">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="preOrNowLiteral" />
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
  </Sequence>
</Activity>